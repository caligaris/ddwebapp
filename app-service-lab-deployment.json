{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "webAppName": {
            "type": "string",
            "defaultValue": "[concat('webApp-', uniqueString(resourceGroup().id))]",
            "minLength": 2,
            "metadata": {
                "description": "Web app name."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "sku": {
            "type": "string",
            "defaultValue": "S1",
            "metadata": {
                "description": "The SKU of App Service Plan."
            }
        },
        "language": {
            "type": "string",
            "defaultValue": ".net",
            "allowedValues": [
                ".net",
                "php",
                "node",
                "html"
            ],
            "metadata": {
                "description": "The language stack of the app."
            }
        },
        "helloWorld": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "true = deploy a sample Hello World app."
            }
        },
        "repoUrl": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional Git Repo URL"
            }
        },
        "serverName": {
            "type": "string",
            "defaultValue": "[uniqueString('sql', resourceGroup().id)]",
            "metadata": {
                "description": "The name of the SQL logical server."
            }
        },
        "sqlDBName": {
            "type": "string",
            "defaultValue": "SampleDB",
            "metadata": {
                "description": "The name of the SQL Database."
            }
        },
        "administratorLogin": {
            "type": "string",
            "defaultValue": "ddadmin",
            "metadata": {
                "description": "The administrator username of the SQL logical server."
            }
        },
        "administratorLoginPassword": {
            "type": "secureString",
            "metadata": {
                "description": "The administrator password of the SQL logical server."
            }
        }
    },
    "variables": {
        "appServicePlanPortalName": "[concat('AppServicePlan-', parameters('webAppName'))]",
        "gitRepoReference": {
            ".net": "https://github.com/Azure-Samples/app-service-web-dotnet-get-started",
            "node": "https://github.com/Azure-Samples/nodejs-docs-hello-world",
            "php": "https://github.com/Azure-Samples/php-docs-hello-world",
            "html": "https://github.com/Azure-Samples/html-docs-hello-world"
        },
        "gitRepoUrl": "[if(bool(parameters('helloWorld')), variables('gitRepoReference')[toLower(parameters('language'))], parameters('repoUrl'))]",
        "configReference": {
            ".net": {
                "netFrameworkVersion": "v6.0",
                "applicationLogs": {
                    "fileSystem": {
                        "level": "Error"
                    },
                    "azureTableStorage": {
                        "level": "Off",
                        "sasUrl": null
                    },
                    "azureBlobStorage": {
                        "level": "Off",
                        "sasUrl": null,
                        "retentionInDays": null
                    }
                }
            },
            "html": {
                "comments": "HTML app. No additional configuration needed."
            },
            "php": {
                "phpVersion": "7.4"
            },
            "node": {
                "appSettings": [
                    {
                        "name": "WEBSITE_NODE_DEFAULT_VERSION",
                        "value": "12.15.0"
                    }
                ]
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[variables('appServicePlanPortalName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[parameters('webAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
            ],
            "properties": {
                "siteConfig": "[variables('configReference')[parameters('language')]]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
            },
            "resources": [
                {
                    "condition": "[contains(variables('gitRepoUrl'),'http')]",
                    "type": "sourcecontrols",
                    "apiVersion": "2020-06-01",
                    "name": "web",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
                    ],
                    "properties": {
                        "repoUrl": "[variables('gitRepoUrl')]",
                        "branch": "master",
                        "isManualIntegration": true
                    }
                },
                {
                    "type": "config",
                    "apiVersion": "2021-02-01",
                    "name": "logs",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
                    ],
                    "properties": {
                        "applicationLogs": {
                            "azureBlobStorage": {
                                "level": "Off",
                                "retentionInDays": null,
                                "sasUrl": null
                            },
                            "azureTableStorage": {
                                "level": "Off",
                                "sasUrl": null
                            },
                            "fileSystem": {
                                "level": "Error"
                            }
                        },
                        "detailedErrorMessages": {
                            "enabled": false
                        },
                        "failedRequestsTracing": {
                            "enabled": false
                        },
                        "httpLogs": {
                            "azureBlobStorage": {
                                "enabled": false,
                                "retentionInDays": null,
                                "sasUrl": null
                            },
                            "fileSystem": {
                                "enabled": false,
                                "retentionInDays": null,
                                "retentionInMb": null
                            }
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-05-01-preview",
            "name": "[parameters('serverName')]",
            "location": "[parameters('location')]",
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-05-01-preview",
            "name": "[format('{0}/{1}', parameters('serverName'), parameters('sqlDBName'))]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
            ]
        }
    ]
}